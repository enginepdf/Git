git init // make a git repository

git clone <Repository URL>  // get data from the Repository of URL

git status // check the status at the moment

git rm 

git remote add <nickname> <Repository URL of co-worker>

git remote -v   // check if it is added

git add <files>  // git add --all, add the data/files to staging area.

git commit -m 'messages'  // commit the data added with 'messages'

git push origin<nickname> master // push the data you added to origin repository

git pull <nickname> master  // get the 'nickname's repository

git checkout <branch name>  // change working space to 'branch name'

git checkout -b  <branch name>  // generate the 'branch name' branch and move to the branch


git fetch upstream

git merge upstream/master

git config --list

git config --global user.name "name"
git config --global user.email 'email'

git log

git log --graph


* git stash

git stash   // 아직 마무리하지 않은 작업을 스택에 잠시 저장할 수 있도록 하는 명령어. commit 하지 않고 나중에 다시 작업 재개

git stash list

git stash apply

git stash drop [stash name] // 스택에 남아 있는 stash를 제거

git stash pop  // git stash apply +  git stash pop

git stash show -p | git apply -R  // 가장 최근의 stash 사용하여 패치 만들어 그것을 거꾸로 적용.(stash 적용한 것 되돌림)


git config  --global alias.c commit
    git c -m 'Commit Message'